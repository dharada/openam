package com.sun.identity.monitoring;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling SUN-OPENSSO-SERVER-MIB.
//

// java imports
//
import java.io.Serializable;

// jmx imports
//
import javax.management.MBeanServer;
import com.sun.management.snmp.SnmpString;
import com.sun.management.snmp.SnmpStatusException;

// jdmk imports
//
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "SsoServerLoggingSvc" group.
 * The group is defined with the following oid: 1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.
 */
public class SsoServerLoggingSvc implements SsoServerLoggingSvcMBean, Serializable {

    /**
     * Variable for storing the value of "LoggingLoggers".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.9".
     *
     * "Count of logger instances"
     *
     */
    protected Integer LoggingLoggers = new Integer(1);

    /**
     * Variable for storing the value of "LoggingBufferSize".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.8".
     *
     * "Buffer size in number of records"
     *
     */
    protected Long LoggingBufferSize = new Long(1);

    /**
     * Variable for storing the value of "LoggingBufferTime".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.7".
     *
     * "Buffer time in seconds"
     *
     */
    protected Long LoggingBufferTime = new Long(1);

    /**
     * Variable for storing the value of "LoggingTimeBuffering".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.6".
     *
     * "Time buffering status : off | on"
     *
     */
    protected String LoggingTimeBuffering = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "LoggingSecure".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.5".
     *
     * "Secure logging status : off | on"
     *
     */
    protected String LoggingSecure = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "LoggingNumHistFiles".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.4".
     *
     * "Number of flat file history files"
     *
     */
    protected Long LoggingNumHistFiles = new Long(1);

    /**
     * Variable for storing the value of "LoggingMaxLogSize".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.3".
     *
     * "Maximum flat file log size in bytes"
     *
     */
    protected Long LoggingMaxLogSize = new Long(1);

    /**
     * Variable for storing the value of "SsoServerLoggingHdlrTable".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.11".
     *
     * "Logging handlers"
     *
     */
    protected TableSsoServerLoggingHdlrTable SsoServerLoggingHdlrTable;

    /**
     * Variable for storing the value of "LoggingLocation".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.2".
     *
     * "Flat file logging location or DB logging URL"
     *
     */
    protected String LoggingLocation = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "LoggingRecsRejected".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.10".
     *
     * "Count of LogRecords log requests the Logging service has rejected for failing authorization"
     *
     */
    protected Long LoggingRecsRejected = new Long(1);

    /**
     * Variable for storing the value of "LoggingType".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.1".
     *
     * "Logging to flat files or database"
     *
     */
    protected String LoggingType = new String("JDMK 5.1");


    /**
     * Constructor for the "SsoServerLoggingSvc" group.
     * If the group contains a table, the entries created through an SNMP SET will not be registered in Java DMK.
     */
    public SsoServerLoggingSvc(SnmpMib myMib) {
        SsoServerLoggingHdlrTable = new TableSsoServerLoggingHdlrTable (myMib);
    }


    /**
     * Constructor for the "SsoServerLoggingSvc" group.
     * If the group contains a table, the entries created through an SNMP SET will be AUTOMATICALLY REGISTERED in Java DMK.
     */
    public SsoServerLoggingSvc(SnmpMib myMib, MBeanServer server) {
        SsoServerLoggingHdlrTable = new TableSsoServerLoggingHdlrTable (myMib, server);
    }

    /**
     * Getter for the "LoggingLoggers" variable.
     */
    public Integer getLoggingLoggers() throws SnmpStatusException {
        return LoggingLoggers;
    }

    /**
     * Getter for the "LoggingBufferSize" variable.
     */
    public Long getLoggingBufferSize() throws SnmpStatusException {
        return LoggingBufferSize;
    }

    /**
     * Getter for the "LoggingBufferTime" variable.
     */
    public Long getLoggingBufferTime() throws SnmpStatusException {
        return LoggingBufferTime;
    }

    /**
     * Getter for the "LoggingTimeBuffering" variable.
     */
    public String getLoggingTimeBuffering() throws SnmpStatusException {
        return LoggingTimeBuffering;
    }

    /**
     * Getter for the "LoggingSecure" variable.
     */
    public String getLoggingSecure() throws SnmpStatusException {
        return LoggingSecure;
    }

    /**
     * Getter for the "LoggingNumHistFiles" variable.
     */
    public Long getLoggingNumHistFiles() throws SnmpStatusException {
        return LoggingNumHistFiles;
    }

    /**
     * Getter for the "LoggingMaxLogSize" variable.
     */
    public Long getLoggingMaxLogSize() throws SnmpStatusException {
        return LoggingMaxLogSize;
    }

    /**
     * Access the "SsoServerLoggingHdlrTable" variable.
     */
    public TableSsoServerLoggingHdlrTable accessSsoServerLoggingHdlrTable() throws SnmpStatusException {
        return SsoServerLoggingHdlrTable;
    }

    /**
     * Access the "SsoServerLoggingHdlrTable" variable as a bean indexed property.
     */
    public SsoServerLoggingHdlrEntryMBean[] getSsoServerLoggingHdlrTable() throws SnmpStatusException {
        return SsoServerLoggingHdlrTable.getEntries();
    }

    /**
     * Getter for the "LoggingLocation" variable.
     */
    public String getLoggingLocation() throws SnmpStatusException {
        return LoggingLocation;
    }

    /**
     * Getter for the "LoggingRecsRejected" variable.
     */
    public Long getLoggingRecsRejected() throws SnmpStatusException {
        return LoggingRecsRejected;
    }

    /**
     * Getter for the "LoggingType" variable.
     */
    public String getLoggingType() throws SnmpStatusException {
        return LoggingType;
    }

}
