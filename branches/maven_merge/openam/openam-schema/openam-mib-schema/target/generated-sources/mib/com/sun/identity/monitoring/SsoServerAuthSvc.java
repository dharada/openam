package com.sun.identity.monitoring;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling SUN-OPENSSO-SERVER-MIB.
//

// java imports
//
import java.io.Serializable;

// jmx imports
//
import javax.management.MBeanServer;
import com.sun.management.snmp.SnmpString;
import com.sun.management.snmp.SnmpStatusException;

// jdmk imports
//
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "SsoServerAuthSvc" group.
 * The group is defined with the following oid: 1.3.6.1.4.1.42.2.230.3.1.1.2.1.10.
 */
public class SsoServerAuthSvc implements SsoServerAuthSvcMBean, Serializable {

    /**
     * Variable for storing the value of "SsoServerAuthModulesTable".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.10.5".
     *
     * "Authentication modules"
     *
     */
    protected TableSsoServerAuthModulesTable SsoServerAuthModulesTable;

    /**
     * Variable for storing the value of "AuthenticationFailureRate".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.10.4".
     *
     * "Current Auth failure rate / second based on a fixed preconfigured window."
     *
     */
    protected Long AuthenticationFailureRate = new Long(0L);

    /**
     * Variable for storing the value of "AuthenticationSuccessRate".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.10.3".
     *
     * "Current Auth success rate / second based on a fixed preconfigured window."
     *
     */
    protected Long AuthenticationSuccessRate = new Long(0L);

    /**
     * Variable for storing the value of "AuthenticationFailureCount".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.10.2".
     *
     * "Count of unsuccessful authentications"
     *
     */
    protected Long AuthenticationFailureCount = new Long(0L);

    /**
     * Variable for storing the value of "AuthenticationSuccessCount".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.10.1".
     *
     * "Count of successful authentications"
     *
     */
    protected Long AuthenticationSuccessCount = new Long(0L);


    /**
     * Constructor for the "SsoServerAuthSvc" group.
     * If the group contains a table, the entries created through an SNMP SET will not be registered in Java DMK.
     */
    public SsoServerAuthSvc(SnmpMib myMib) {
        SsoServerAuthModulesTable = new TableSsoServerAuthModulesTable (myMib);
    }


    /**
     * Constructor for the "SsoServerAuthSvc" group.
     * If the group contains a table, the entries created through an SNMP SET will be AUTOMATICALLY REGISTERED in Java DMK.
     */
    public SsoServerAuthSvc(SnmpMib myMib, MBeanServer server) {
        SsoServerAuthModulesTable = new TableSsoServerAuthModulesTable (myMib, server);
    }

    /**
     * Access the "SsoServerAuthModulesTable" variable.
     */
    public TableSsoServerAuthModulesTable accessSsoServerAuthModulesTable() throws SnmpStatusException {
        return SsoServerAuthModulesTable;
    }

    /**
     * Access the "SsoServerAuthModulesTable" variable as a bean indexed property.
     */
    public SsoServerAuthModulesEntryMBean[] getSsoServerAuthModulesTable() throws SnmpStatusException {
        return SsoServerAuthModulesTable.getEntries();
    }

    /**
     * Getter for the "AuthenticationFailureRate" variable.
     */
    public Long getAuthenticationFailureRate() throws SnmpStatusException {
        return AuthenticationFailureRate;
    }

    /**
     * Getter for the "AuthenticationSuccessRate" variable.
     */
    public Long getAuthenticationSuccessRate() throws SnmpStatusException {
        return AuthenticationSuccessRate;
    }

    /**
     * Getter for the "AuthenticationFailureCount" variable.
     */
    public Long getAuthenticationFailureCount() throws SnmpStatusException {
        return AuthenticationFailureCount;
    }

    /**
     * Getter for the "AuthenticationSuccessCount" variable.
     */
    public Long getAuthenticationSuccessCount() throws SnmpStatusException {
        return AuthenticationSuccessCount;
    }

}
