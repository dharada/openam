package com.sun.identity.monitoring;

//
// Generated by mibgen version 5.1 (03/08/07) when compiling SUN-OPENSSO-SERVER-MIB.
//

// java imports
//
import java.io.Serializable;

// jmx imports
//
import javax.management.MBeanServer;
import com.sun.management.snmp.SnmpString;
import com.sun.management.snmp.SnmpStatusException;

// jdmk imports
//
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "SsoServerIDFFSvc" group.
 * The group is defined with the following oid: 1.3.6.1.4.1.42.2.230.3.1.1.2.1.20.
 */
public class SsoServerIDFFSvc implements SsoServerIDFFSvcMBean, Serializable {

    /**
     * Variable for storing the value of "IDFFIdLocalSessToken".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.20.6".
     *
     * "Number of entries in ID Local Session Token Map for all ID-FF Providers"
     *
     */
    protected Long IDFFIdLocalSessToken = new Long(0L);

    /**
     * Variable for storing the value of "IDFFIdAuthnRqt".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.20.5".
     *
     * "Number of entries in ID Authentication Request Map for all ID-FF Providers"
     *
     */
    protected Long IDFFIdAuthnRqt = new Long(0L);

    /**
     * Variable for storing the value of "IDFFUserIDSessionList".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.20.4".
     *
     * "Number of entries in UserID Session List Map for all ID-FF Providers"
     *
     */
    protected Long IDFFUserIDSessionList = new Long(0L);

    /**
     * Variable for storing the value of "IDFFArtifacts".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.20.3".
     *
     * "Number of artifacts for all ID-FF providers"
     *
     */
    protected Long IDFFArtifacts = new Long(0L);

    /**
     * Variable for storing the value of "IDFFAssertions".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.20.2".
     *
     * "Number of assertions for all ID-FF providers"
     *
     */
    protected Long IDFFAssertions = new Long(0L);

    /**
     * Variable for storing the value of "IDFFStatus".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.20.1".
     *
     * "ID-FF service operational status : dormant | operational"
     *
     */
    protected String IDFFStatus = new String("dormant");

    /**
     * Variable for storing the value of "IDFFRelayState".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.20.8".
     *
     * "Number of entries in Relay State Map for all ID-FF Providers"
     *
     */
    protected Long IDFFRelayState = new Long(0L);

    /**
     * Variable for storing the value of "IDFFIdDestn".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.20.7".
     *
     * "Number of entries in ID Destination Map for all ID-FF Providers"
     *
     */
    protected Long IDFFIdDestn = new Long(0L);


    /**
     * Constructor for the "SsoServerIDFFSvc" group.
     * If the group contains a table, the entries created through an SNMP SET will not be registered in Java DMK.
     */
    public SsoServerIDFFSvc(SnmpMib myMib) {
    }


    /**
     * Constructor for the "SsoServerIDFFSvc" group.
     * If the group contains a table, the entries created through an SNMP SET will be AUTOMATICALLY REGISTERED in Java DMK.
     */
    public SsoServerIDFFSvc(SnmpMib myMib, MBeanServer server) {
    }

    /**
     * Getter for the "IDFFIdLocalSessToken" variable.
     */
    public Long getIDFFIdLocalSessToken() throws SnmpStatusException {
        return IDFFIdLocalSessToken;
    }

    /**
     * Getter for the "IDFFIdAuthnRqt" variable.
     */
    public Long getIDFFIdAuthnRqt() throws SnmpStatusException {
        return IDFFIdAuthnRqt;
    }

    /**
     * Getter for the "IDFFUserIDSessionList" variable.
     */
    public Long getIDFFUserIDSessionList() throws SnmpStatusException {
        return IDFFUserIDSessionList;
    }

    /**
     * Getter for the "IDFFArtifacts" variable.
     */
    public Long getIDFFArtifacts() throws SnmpStatusException {
        return IDFFArtifacts;
    }

    /**
     * Getter for the "IDFFAssertions" variable.
     */
    public Long getIDFFAssertions() throws SnmpStatusException {
        return IDFFAssertions;
    }

    /**
     * Getter for the "IDFFStatus" variable.
     */
    public String getIDFFStatus() throws SnmpStatusException {
        return IDFFStatus;
    }

    /**
     * Getter for the "IDFFRelayState" variable.
     */
    public Long getIDFFRelayState() throws SnmpStatusException {
        return IDFFRelayState;
    }

    /**
     * Getter for the "IDFFIdDestn" variable.
     */
    public Long getIDFFIdDestn() throws SnmpStatusException {
        return IDFFIdDestn;
    }

}
