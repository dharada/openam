package com.sun.identity.monitoring;

//
// Generated by mibgen version 5.1 (05/20/05) when compiling SUN-OPENSSO-SERVER-MIB.
//

// java imports
//
import java.io.Serializable;

// jmx imports
//
import javax.management.MBeanServer;
import com.sun.management.snmp.SnmpString;
import com.sun.management.snmp.SnmpStatusException;

// jdmk imports
//
import com.sun.management.snmp.agent.SnmpMib;

/**
 * The class is used for implementing the "SsoServerLoggingSvc" group.
 * The group is defined with the following oid: 1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.
 */
public class SsoServerLoggingSvc implements SsoServerLoggingSvcMBean, Serializable {

    /**
     * Variable for storing the value of "SsoServerLoggingLoggers".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.9".
     */
    protected Integer SsoServerLoggingLoggers = new Integer(1);

    /**
     * Variable for storing the value of "SsoServerLoggingBufferSize".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.8".
     */
    protected Long SsoServerLoggingBufferSize = new Long(1);

    /**
     * Variable for storing the value of "SsoServerLoggingBufferTime".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.7".
     */
    protected Long SsoServerLoggingBufferTime = new Long(1);

    /**
     * Variable for storing the value of "SsoServerLoggingTimeBuffering".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.6".
     */
    protected String SsoServerLoggingTimeBuffering = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "SsoServerLoggingSecure".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.5".
     */
    protected String SsoServerLoggingSecure = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "SsoServerLoggingNumHistFiles".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.4".
     */
    protected Long SsoServerLoggingNumHistFiles = new Long(1);

    /**
     * Variable for storing the value of "SsoServerLoggingMaxLogSize".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.3".
     */
    protected Long SsoServerLoggingMaxLogSize = new Long(1);

    /**
     * Variable for storing the value of "SsoServerLoggingHdlrTable".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.11".
     */
    protected TableSsoServerLoggingHdlrTable SsoServerLoggingHdlrTable;

    /**
     * Variable for storing the value of "SsoServerLoggingLocation".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.2".
     */
    protected String SsoServerLoggingLocation = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "SsoServerLoggingType".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.1".
     */
    protected String SsoServerLoggingType = new String("JDMK 5.1");

    /**
     * Variable for storing the value of "SsoServerLoggingRecsRejected".
     * The variable is identified by: "1.3.6.1.4.1.42.2.230.3.1.1.2.1.12.10".
     */
    protected Long SsoServerLoggingRecsRejected = new Long(1);


    /**
     * Constructor for the "SsoServerLoggingSvc" group.
     * If the group contains a table, the entries created through an SNMP SET will not be registered in Java DMK.
     */
    public SsoServerLoggingSvc(SnmpMib myMib) {
        SsoServerLoggingHdlrTable = new TableSsoServerLoggingHdlrTable (myMib);
    }


    /**
     * Constructor for the "SsoServerLoggingSvc" group.
     * If the group contains a table, the entries created through an SNMP SET will be AUTOMATICALLY REGISTERED in Java DMK.
     */
    public SsoServerLoggingSvc(SnmpMib myMib, MBeanServer server) {
        SsoServerLoggingHdlrTable = new TableSsoServerLoggingHdlrTable (myMib, server);
    }

    /**
     * Getter for the "SsoServerLoggingLoggers" variable.
     */
    public Integer getSsoServerLoggingLoggers() throws SnmpStatusException {
        return SsoServerLoggingLoggers;
    }

    /**
     * Getter for the "SsoServerLoggingBufferSize" variable.
     */
    public Long getSsoServerLoggingBufferSize() throws SnmpStatusException {
        return SsoServerLoggingBufferSize;
    }

    /**
     * Getter for the "SsoServerLoggingBufferTime" variable.
     */
    public Long getSsoServerLoggingBufferTime() throws SnmpStatusException {
        return SsoServerLoggingBufferTime;
    }

    /**
     * Getter for the "SsoServerLoggingTimeBuffering" variable.
     */
    public String getSsoServerLoggingTimeBuffering() throws SnmpStatusException {
        return SsoServerLoggingTimeBuffering;
    }

    /**
     * Getter for the "SsoServerLoggingSecure" variable.
     */
    public String getSsoServerLoggingSecure() throws SnmpStatusException {
        return SsoServerLoggingSecure;
    }

    /**
     * Getter for the "SsoServerLoggingNumHistFiles" variable.
     */
    public Long getSsoServerLoggingNumHistFiles() throws SnmpStatusException {
        return SsoServerLoggingNumHistFiles;
    }

    /**
     * Getter for the "SsoServerLoggingMaxLogSize" variable.
     */
    public Long getSsoServerLoggingMaxLogSize() throws SnmpStatusException {
        return SsoServerLoggingMaxLogSize;
    }

    /**
     * Access the "SsoServerLoggingHdlrTable" variable.
     */
    public TableSsoServerLoggingHdlrTable accessSsoServerLoggingHdlrTable() throws SnmpStatusException {
        return SsoServerLoggingHdlrTable;
    }

    /**
     * Access the "SsoServerLoggingHdlrTable" variable as a bean indexed property.
     */
    public SsoServerLoggingHdlrEntryMBean[] getSsoServerLoggingHdlrTable() throws SnmpStatusException {
        return SsoServerLoggingHdlrTable.getEntries();
    }

    /**
     * Getter for the "SsoServerLoggingLocation" variable.
     */
    public String getSsoServerLoggingLocation() throws SnmpStatusException {
        return SsoServerLoggingLocation;
    }

    /**
     * Getter for the "SsoServerLoggingType" variable.
     */
    public String getSsoServerLoggingType() throws SnmpStatusException {
        return SsoServerLoggingType;
    }

    /**
     * Getter for the "SsoServerLoggingRecsRejected" variable.
     */
    public Long getSsoServerLoggingRecsRejected() throws SnmpStatusException {
        return SsoServerLoggingRecsRejected;
    }

}
